@model  EventSystem.Web.Models.Places.PostPlaceViewModel
@{
    ViewBag.Title = "Create New Place";
}
<div id="generalTabContent" class="tab-content">
    <div id="tab-edit" class="tab-pane fade in active">
        @using (Html.BeginForm("Create", "Places", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="row form-group">
                <div class="col-md-2 col-md-offset-2">
                    @Html.LabelFor(x => x.CountryId)
                </div>
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.CountryId, ViewBag.Countries as IEnumerable<SelectListItem>, new { @class = "form-control" })
                </div>
            </div>

            <div class="row form-group ">
                <div class="col-md-2 col-md-offset-2">
                    @Html.LabelFor(x => x.CityId)
                </div>
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.CityId, ViewBag.Cities as IEnumerable<SelectListItem>, new { @class = "form-control" })
                </div>
            </div>
            @Html.EditorFor(m => m.Name)

            <div class="row form-group">
                <label for="Street" class="col-md-2 col-md-offset-2">Map</label>
                <div class="col-md-6 ">
                    <div id="map" style="height:200px; width: 100%">
                        <div id="gmap-wrap">
                            <div id="gmap">
                            </div>
                        </div>
                    </div><!--/#map-->
                </div>
            </div>

            @Html.EditorFor(m => m.Street)
            @Html.HiddenFor(m => m.Longitude)
            @Html.HiddenFor(m => m.Latitude)

            <div class="row form-group ">
                <div class="col-md-2 col-md-offset-2">
                    @Html.LabelFor(x => x.Description)
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(m => m.Description, new { @class = "form-control" })
                </div>
            </div>
            <div class="row form-group col-md-offset-4">
                <div class="fileUpload btn btn-primary">
                    <i class="fa fa-upload"></i>&nbsp;<span>Upload</span>
                    <input type="file" name="Files[0]" id="file1" class="upload" />
                </div>
            </div>

            <div class="row form-group col-md-offset-4">
                <div class="fileUpload btn btn-primary">
                    <i class="fa fa-upload"></i>&nbsp;<span>Upload</span>
                    <input type="file" name="Files[1]" id="file2" class="upload" />
                </div>
                <div class="text-center mbl">
                    <img id="blah" src="#" alt="your image" class="img-responsive" />
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-6 col-md-offset-2">
                    <button type="submit" class="btn btn-green btn-block">Create</button>
                </div>
            </div>
        }

    </div>
</div>

@section scripts{
    <script src="http://maps.google.com/maps/api/js?key=AIzaSyAllhFsNJRffftCMsKEMdQpRkCtKmIpL4c"></script>
    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#blah').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#file2").change(function () {
            readURL(this);
        });
        
           
        //Get Addres longitude and latitude
        $('#Street').blur(function () {
            GetAddressGeoLocation();
        })

        $('form').submit(function (e) {
            $this = $(this);
            if (!$('#Latitude').val()) {
                e.preventDefault();

                GetAddressGeoLocation()
                 .then(function () {
                     console.log('ok')
                     $this.unbind("submit").submit()
                 });
            }
        })

        function GetAddressGeoLocation() {
            var address = $('#Street').val();
            var feedback = $('#feedback');
            var city = $('#CityId option:selected').text()
            console.log(city);

            return $.get('https://maps.googleapis.com/maps/api/geocode/json?address=' + address + city)
                     .then(function (result) {
                         if (result.status === 'OK') {
                             var address = result.results[0].formatted_address;
                             var numCommas = address.match(/,/g).length;
                             if (numCommas == 2) {
                                 feedback.removeClass();
                                 feedback.addClass('icon-ok');
                                 feedback.css('color', 'green');

                                 var location = result.results[0].geometry.location;
                                 var latitude = $('#Latitude');
                                 var longitude = $('#Longitude');
                                 latitude.val(parseFloat(location.lat));
                                 longitude.val(location.lng);
                                 console.log(location.lat);
                                 console.log(location.lng);
                                 AddMarker(location.lat, location.lng)
                             } else {
                                 feedback.removeClass();
                                 feedback.addClass('icon-remove');
                                 feedback.css('color', 'red');
                             }
                         }
                     })
        }

        //Google Maps
        var map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 42.1523245, lng: 24.7484875 },
            scrollwheel: false,
            zoom: 15
        });

        var marker = new google.maps.Marker();

        function AddMarker(lat, long, address) {
            var latLng = { lat: lat, lng: long };

            marker.setMap(null);
            map.setCenter(latLng)

            marker = new google.maps.Marker({
                position: latLng,
                map: map,
                title: address
            });
        }

    </script>
}